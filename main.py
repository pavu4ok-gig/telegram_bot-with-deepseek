import os
from aiohttp import web
from aiogram import Bot, Dispatcher, types
from app.handlers import router

BOT_TOKEN = os.getenv("BOT_TOKEN")
WEBHOOK_PATH = "/webhook"
WEBHOOK_URL = f"https://telegram-bot-with-deepseek.onrender.com{WEBHOOK_PATH}"

bot = Bot(token=BOT_TOKEN)
dp = Dispatcher()
dp.include_router(router)

async def webhook_handler(request: web.Request):
    try:
        print("üîÑ –ü–æ–ª—É—á–µ–Ω webhook –∑–∞–ø—Ä–æ—Å")  # –û—Ç–ª–∞–¥–æ—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
        data = await request.json()
        print(f"üì• –î–∞–Ω–Ω—ã–µ –æ—Ç Telegram: {data}")  # –ü–æ–∫–∞–∑–∞—Ç—å —á—Ç–æ –ø—Ä–∏—Ö–æ–¥–∏—Ç
        update = types.Update(**data)
        await dp.feed_update(bot, update)
        print("‚úÖ Update –æ–±—Ä–∞–±–æ—Ç–∞–Ω —É—Å–ø–µ—à–Ω–æ")
        return web.Response(text="OK")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ webhook: {e}")
        return web.Response(status=500, text=f"Error: {e}")

async def health_check(request):
    return web.Response(text="ü§ñ Bot is running!")

async def on_startup():
    await bot.set_webhook(
        url=WEBHOOK_URL,
        drop_pending_updates=True
    )
    print(f"üîó Webhook —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: {WEBHOOK_URL}")

async def on_shutdown():
    try:
        await bot.delete_webhook()
        print("üóëÔ∏è Webhook —É–¥–∞–ª–µ–Ω")
    except Exception as e:
        print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ webhook: {e}")
    finally:
        await bot.session.close()

# –°–æ–∑–¥–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∏ —Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –º–∞—Ä—à—Ä—É—Ç—ã –≤—Ä—É—á–Ω—É—é
app = web.Application()
app.router.add_post(WEBHOOK_PATH, webhook_handler)  # üëà –†—É—á–Ω–∞—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è!
app.router.add_get("/", health_check)  # –î–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞

if __name__ == "__main__":
    app.on_startup.append(lambda app: on_startup())
    app.on_shutdown.append(lambda app: on_shutdown())
    
    port = int(os.getenv("PORT", 10000))
    print(f"üöÄ –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞ –Ω–∞ –ø–æ—Ä—Ç—É {port}")
    web.run_app(app, host="0.0.0.0", port=port)
