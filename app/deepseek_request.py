from openai import OpenAI
from openai import RateLimitError
import time
import logging
from app.config import LLM_ENDPOINT, LLM_API_KEY, LLM_MODEL

logger = logging.getLogger(__name__)

class SendRequestToLLM:
    
    def __init__(self):
        self.client = OpenAI(
            base_url=LLM_ENDPOINT,
            api_key=LLM_API_KEY,
        )
    
    def get_answer(self, promt):
        logger.info('üîÑ –û—Ç–ø—Ä–∞–≤–ª–µ–Ω –∑–∞–ø—Ä–æ—Å –∫ DeepSeek')
        
        for attempt in range(5):
            try:
                completion = self.client.chat.completions.create(
                    model=LLM_MODEL,
                    messages=[
                        {
                            "role": "user",
                            "content": f"–¢—ã —Ç–µ–ª–µ–≥—Ä–∞–º –±–æ—Ç –≤ –º–æ–µ–º –≥—Ä—É–ø–ø–æ–≤–æ–º —á–∞—Ç–µ (—Å—Ä–∞–∑—É –æ—Ç—ã–≥—Ä—ã–≤–∞–π —Ä–æ–ª—å –±–µ–∑ –ª–∏—à–Ω–∏—Ö –ø–æ–¥—Å–∫–∞–∑–æ–∫ –∏ –∫–∞–∫–∏—Ö –ª–∏–±–æ –∏–Ω–∏—Ü–∏–∞—Ç–∏–≤–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π –ø–æ–∫–∞ —Ç–µ–±—è –Ω–µ –ø–æ–ø—Ä–æ—Å—è—Ç) –≤–æ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –∫–æ—Ç–æ—Ä–æ–µ –æ—Ç–ø—Ä–∞–≤–∏–ª –æ–¥–∏–Ω –∏–∑ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤: {promt}"
                        }
                    ]
                )
                
                logger.info('‚úÖ –ü–æ–ª—É—á–µ–Ω –æ—Ç–≤–µ—Ç –æ—Ç DeepSeek')
                return completion.choices[0].message.content
                
            except RateLimitError as e:
                wait_time = 2 ** attempt  # –≠–∫—Å–ø–æ–Ω–µ–Ω—Ü–∏–∞–ª—å–Ω–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞: 1, 2, 4, 8, 16 —Å–µ–∫
                logger.warning(f"‚ö†Ô∏è Rate limit exceeded (–ø–æ–ø—ã—Ç–∫–∞ {attempt + 1}/5). –û–∂–∏–¥–∞–Ω–∏–µ {wait_time} —Å–µ–∫...")
                time.sleep(wait_time)  # –ò—Å–ø–æ–ª—å–∑—É–µ–º time.sleep –≤–º–µ—Å—Ç–æ asyncio.sleep
                
            except Exception as e:
                logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ –∫ DeepSeek (–ø–æ–ø—ã—Ç–∫–∞ {attempt + 1}/5): {e}")
                if attempt == 4:  # –ü–æ—Å–ª–µ–¥–Ω—è—è –ø–æ–ø—ã—Ç–∫–∞
                    return f"–ò–∑–≤–∏–Ω–∏—Ç–µ, –Ω–µ –º–æ–≥—É –æ—Ç–≤–µ—Ç–∏—Ç—å –ø—Ä—è–º–æ —Å–µ–π—á–∞—Å. –û—à–∏–±–∫–∞: {str(e)}"
                time.sleep(1)
        
        # –ï—Å–ª–∏ –≤—Å–µ –ø–æ–ø—ã—Ç–∫–∏ –Ω–µ—É–¥–∞—á–Ω—ã
        logger.error("‚ùå –í—Å–µ –ø–æ–ø—ã—Ç–∫–∏ –æ–±—Ä–∞—â–µ–Ω–∏—è –∫ DeepSeek –Ω–µ—É–¥–∞—á–Ω—ã")
        return "–ò–∑–≤–∏–Ω–∏—Ç–µ, —Å–µ—Ä–≤–∏—Å –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ."
